'--------------DAILY VaR------------- '-----------------Calculation of metrics to compare VaR-----------
' ================================ ==============
' STEP 1: Convert ALL VaR measures to series
' ================================ ==============
' Parametric (Normal) VaR series varsimple1_series = nee_varsimple1_1day series varsimple5_series = nee_varsimple5_1day
' GARCH VaR
series vargarch1_series = nee_garchvar1_1day series vargarch5_series = nee_garchvar5_1day
' EGARCH VaR
series var_1egarch = nee_egarchvar1_1day series var_5egarch = nee_egarchvar5_1day
' Historical VaR series var1_series = nee_histvar1_1day series var5_series = nee_histvar5_1day
' Monte Carlo VaR
series mcvar1fivedays_series = mcvar1
series mcvar2fivedays_series = mcvar2
' Check all required series exist
%required_series = "varsimple1_series varsimple5_series vargarch1_series vargarch5_series var_1egarch var_5egarch var1_series var5_series mcvar1fivedays_series mcvar2fivedays_series"
for %s {%required_series} if @isobject(%s)=0 then
@uiprompt("Missing series: " + %s)
stop endif
next
' ================================ ==============
' STEP 2: Define VaR group with ALL 10 models
' ================================ ==============
group var_series varsimple1_series varsimple5_series vargarch1_series vargarch5_series var_1egarch var_5egarch var1_series var5_series
45
 mcvar1fivedays_series mcvar2fivedays_series
' ================================ ==============
' STEP 3: Initialize parameters CORRECTLY
' ================================ ==============
vector(10) conf_levels conf_levels.fill 1, 5, 1, 5, 1, 5, 1, 5, 1, 5
vector(10) conf_p conf_p.fill 0.01, 0.05, 0.01, 0.05, 0.01, 0.05, 0.01, 0.05, 0.01, 0.05
%models = "Parametric |Parametric |GARCH |GARCH |EGARCH |EGARCH |Historical |Historical |Monte Carlo |Monte Carlo "
results(1,5) = "CC p-value" results(1,6) = "Avg RLF" results(1,7) = "Avg FLF"
scalar i = 0.05
for !i = 1 to 10
series current_var =
var_series(!i)
scalar p = conf_p(!i)
series breaches = (return_nee < current_var)
scalar n1 = @sum(breaches)
scalar n0 = @obs(return_nee) - n1
if n1 = 0 then
scalar log_p_part = 0 scalar log_pi_hat_part =
0
else
scalar log_p_part = n1 * log(p)
scalar log_pi_hat_part = n1 * log(n1 / (n0 + n1))
'
================================ ==============
' STEP 4: Backtesting Loop for
ALL models '=0 ================================ ==============
endif
if n0 = 0 then
scalar log_1p_part = 0 scalar log_1pi_hat_part
else
scalar log_1p_part = n0
table(11,7) results results.setwidth(A) 25 results(1,1) = "Model" results(1,2) = "VaR Level" results(1,3) = "UC p-value" results(1,4) = "Ind p-value"
* log(1 - p)
scalar log_1pi_hat_part
= n0 * log(n0 / (n0 + n1)) endif
scalar LR_UC = -2 * ((log_p_part + log_1p_part) -
46

 (log_pi_hat_part + log_1pi_hat_part))
if @isna(LR_UC) then scalar pval_UC = NA
else
scalar pval_UC = 1 -
@cchisq(LR_UC, 1) endif
scalar pval_ind = NA
if n1 > 0 then
matrix(2,2) trans_matrix trans_matrix.fill 0, 0,
0, 0
for !j = 2 to @obs(breaches)
if @isna(breaches(!j-1)) = 0 and
@isna(breaches(!j)) = 0 then scalar prev_val
= breaches(!j-1)
scalar curr_val
= breaches(!j)
trans_matrix(prev_val+1, curr_val+1) = trans_matrix(prev_val+1, curr_val+1) + 1
endif next
scalar n01 = trans_matrix(1,2)
scalar n11 = trans_matrix(2,2)
scalar denom01 = trans_matrix(1,1) + n01
scalar denom11 = trans_matrix(2,1) + n11
scalar total_trans = @sum(trans_matrix)
if denom01 scalar
denom01 else
scalar endif
if denom11 scalar
denom11 else
scalar endif
>0then pi_01 = n01 /
pi_01 = NA
>0then pi_11 = n11 /
pi_11 = NA
if total_trans > 0 then
scalar n11) / total_trans
else scalar
endif
pi_2 = (n01 +
pi_2 = NA
if @isna(pi_01) = 0 and @isna(pi_11) = 0 and @isna(pi_2) =0then
scalar term1 = 0 scalar term2 = 0 scalar term3 = 0 scalar term4 = 0 scalar term5 = 0 scalar term6 = 0
then
* log(1-pi_2)
if @isna(n0-n01) =0 term1 = (n0-n01)
47

* log(1-pi_01)
then
* log(pi_2)
* log(1-pi_11)
endif
series RLF current_var) * current_var)^2 series FLF current_var) * current_var)^2 current_var) *
then
log(pi_01)
then log(pi_11)
endif
if @isna(n01) =
term4 = n01 endif
if @isna(n11) = term6 = n11
endif
0 *
0 *
-2*
= (return_nee < (return_nee +
= (return_nee < (return_nee +
+ (return_nee >= i * current_var
term3 = (n0-n01) endif
if @isna(n1-n11) = 0 term2 = (n1-n11) term5 = (n1-n11)
endif
if @isna(pval_UC) or @isna(pval_ind) then
scalar pval_CC = NA else
scalar pval_CC = 1 - @cchisq(LR_UC + LR_ind, 2)
scalar LR_ind = ((term1 + term2) - (term3 +
%current_model = @word(%models, !i)
%level_str = @str(conf_levels(!i))
results(!i+1,1) = %current_model
results(!i+1,2) = results(!i+1,3) = results(!i+1,4) = results(!i+1,5) = results(!i+1,6) = results(!i+1,7) =
+ "%"
%level_str pval_UC pval_ind pval_CC @mean(RLF) @mean(FLF)
term4 + term5 + term6))
if @isna(LR_ind)
then = NA
scalar pval_ind
else
scalar pval_ind
= 1 - @cchisq(LR_ind, 1) endif
endif
delete breaches RLF FLF next
' Display the final results table
show results
